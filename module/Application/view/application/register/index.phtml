<?php
//Preparamos el formulario
$form = $this->formRegister;
$form->prepare();

//Definimos el atributo action y method
$form->setAttributes(array(
    'action' => $this->url."/Prueba/saveuser",
    'method' => 'post'
));

//Utilizamos el plugin para mostrar los label
$formLabel = $this->plugin('formLabel');
 
echo $this->form()->openTag($form);
?>
<p>
    <a href="<?php echo $this->url?>/Prueba">
        Back
    </a>
</p>
<div>
<?php
//Imprimimos el campo usuario
$usuario = $form->get('name');
echo $formLabel->openTag().$usuario->getOption('label')." ";
echo $this->formInput($usuario);
echo $formLabel->closeTag();
?>
</div>
<br>
<div>
<?php
//Imprimimos el campo usuario
$usuario = $form->get('email');
echo $formLabel->openTag().$usuario->getOption('label')." ";
echo $this->formInput($usuario);
echo $formLabel->closeTag();
?>
</div>
<br>
<div>
<?php
//Imprimimos el campo usuario
$usuario = $form->get('phone');
echo $formLabel->openTag().$usuario->getOption('label')." ";
echo $this->formInput($usuario);
echo $formLabel->closeTag();
?>
</div>
<br>
<div>
<?php
//Imprimimos el campo contraseña
$contrasena = $form->get('password_2');
echo $formLabel->openTag().$contrasena->getOption('label')." ";
echo $this->formInput($contrasena);
echo $formLabel->closeTag();
?>    
</div>
<br>
<?php
//Imprimimos el boton de enviar
echo $this->formElement($form->get('submit'));
 
//Cerramos el formulario
echo $this->form()->closeTag(); 
?>
<br><br>
<button onclick="conect()">Register with Facebook</button>
<div id="status" style="display: none;">
</div>

<script>
  // This is called with the results from from FB.getLoginStatus().
  function statusChangeCallback(response) {
    console.log('statusChangeCallback');
    console.log(response);
    // The response object is returned with a status field that lets the
    // app know the current login status of the person.
    // Full docs on the response object can be found in the documentation
    // for FB.getLoginStatus().
    if (response.status === 'connected') {
      // Logged into your app and Facebook.
      testAPI();
    } else if (response.status === 'not_authorized') {
      // The person is logged into Facebook, but not your app.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into this app.';
    } else {
      // The person is not logged into Facebook, so we're not sure if
      // they are logged into this app or not.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into Facebook.';
    }
  }

  // This function is called when someone finishes with the Login
  // Button.  See the onlogin handler attached to it in the sample
  // code below.
  function checkLoginState() {
    FB.getLoginStatus(function(response) {
      statusChangeCallback(response);
    });
  }

  window.fbAsyncInit = function() {
  FB.init({
    appId      : '1708291569425147',
    cookie     : true,  // enable cookies to allow the server to access 
                        // the session
    xfbml      : true,  // parse social plugins on this page
    version    : 'v2.5' // use graph api version 2.5
  });

  // Now that we've initialized the JavaScript SDK, we call 
  // FB.getLoginStatus().  This function gets the state of the
  // person visiting this page and can return one of three states to
  // the callback you provide.  They can be:
  //
  // 1. Logged into your app ('connected')
  // 2. Logged into Facebook, but not your app ('not_authorized')
  // 3. Not logged into Facebook and can't tell if they are logged into
  //    your app or not.
  //
  // These three cases are handled in the callback function.

  FB.getLoginStatus(function(response) {
    statusChangeCallback(response);
  });

  };

  // Load the SDK asynchronously
  (function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "//connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));

  // Here we run a very simple test of the Graph API after login is
  // successful.  See statusChangeCallback() for when this call is made.
  function testAPI() {
    console.log('Welcome!  Fetching your information.... ');
    FB.api('/me', function(response) {
      console.log('Successful login for: ' + response.name);
      console.log(response);
      document.getElementById('status').innerHTML =
        'Thanks for logging in, ' + response.name + '!';
    });
  }
  
  
function conect(){
FB.getLoginStatus(function(response) {
  if (response.status === 'connected') {
     getfbinfo(response);
  } else {
    FB.login(function (response) {
  if (response.authResponse) {
   FB.getLoginStatus(function(response) {
     if (response.status === 'connected') {    
    getfbinfo(response);
     }else{
       return 0;
     }
   });
  } else {// cancelled    
   alert("para participar , debes aceptar los permisos solicitados por Facebook. Actualiza la página e inténtalo de nuevo.");
   return 0;
  }
 },{scope: 'email,public_profile'}); 
  }
 });
}

var uid,nombreu,mail;
 var fbd = {};  
var conected=0;

function getfbinfo(response){
 uid = response.authResponse.userID;
 Object.defineProperty(fbd,'uid',{value:uid, writable: false, enumerable: true});
  
    accessToken = response.authResponse.accessToken;
    FB.api('/me?fields=id,name,email,verified', function(response) {
     nombreu=response.name;
     Object.defineProperty(fbd,'nombreu',{value:nombreu, writable: false, enumerable: true});
     mail=response.email;
     Object.defineProperty(fbd,'mail',{value:mail, writable: false, enumerable: true});
     console.log(response.email);
     document.getElementById('email_1').value = response.email;
     document.getElementById('name_1').value = response.name;
     document.getElementById('password_2_1').value = response.id;
     document.getElementById('phone_1').value = '111111';
     document.frmRegister.submit();
    });
}
</script>

<form id="frmRegister" name="frmRegister" action="/Prueba/saveuserfb" method="post">
    <input type="hidden" name="email_1" id="email_1" value="">
    <input type="hidden" name="name_1" id="name_1" value="">
    <input type="hidden" name="password_2_1" id="password_2_1" value="">
    <input type="hidden" name="phone_1" id="phone_1" value="111111">
</form>